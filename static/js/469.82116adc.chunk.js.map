{"version":3,"file":"static/js/469.82116adc.chunk.js","mappings":"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","sources":["components/SectionTitle/SectionTitle.jsx","redux/contacts/selector.js","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ContactsForm/ContactsForm.jsx","pages/ContactsPage.js"],"sourcesContent":["import React from 'react';\nimport { Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\n\nconst SectionTitle = ({ title, children }) => (\n  <>\n    <Typography\n      variant=\"h4\"\n      gutterBottom\n      color=\"#494D5F\"\n      sx={{ textAlign: 'center' }}\n    >\n      {title}\n    </Typography>\n    {children}\n  </>\n);\n\nSectionTitle.PropType = {\n  title: PropTypes.string,\n};\n\nexport default SectionTitle;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, queryFilter) => {\n    const fiterContacts = queryFilter\n      ? contacts.filter(contact =>\n          contact.name.toLowerCase().includes(queryFilter)\n        )\n      : contacts;\n\n    return fiterContacts;\n  }\n);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectFilteredContacts } from 'redux/contacts/selector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {ColorButton } from '../styled/styledMui'\n\nconst Contacts = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  const onDelContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ul\n      style={{\n        ml: 'auto',\n        mr: 'auto',\n        width: '48ch',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      }}\n    >\n      {contacts.map(({ id, name, number }) => (\n        <li\n          key={id}\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            color: 'rgb(73, 77, 95)',\n            fontFamily: 'Segoe UI',\n            fontSize: '18px',\n            p: 0,\n            mb: '16px',\n            width: '100%',\n          }}\n        >\n          <p>\n            {name}: {number}\n          </p>\n          <ColorButton\n            type=\"button\"\n            onClick={() => onDelContact(id)}\n            style={{\n              marginBottom: '5px',\n              padding: '3px',\n              fontSize: '12px',\n              border: '1px solid #799d91',\n              borderRadius: `8px`,\n              '&:hover': {\n                backgroundColor: `#40cd9e`,\n                color: `#fff`,\n                border: `1px solid #799d91`,\n              },\n            }}\n          >\n            Delete\n          </ColorButton>\n        </li>\n      ))}\n    </ul>\n  );\n};\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Contacts;\n","\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from '../../redux/contacts/selector';\nimport { FormControl } from '@mui/material';\nimport { StyledInput, StyledInputLable } from 'components/styled/styledMui';\n\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilterChange = query => {\n    \n    dispatch(addFilter(query.toLowerCase()));\n  };\n  const filter = useSelector(selectFilter);\n\n  return (\n    <FormControl\n      sx={{ width: '48ch', mr: 'auto', ml: 'auto' }}\n      variant=\"standard\"\n      autoComplete=\"off\"\n    >\n      <StyledInputLable htmlFor=\"standard-search-by-name\">\n        Find contact by name\n      </StyledInputLable>\n      <StyledInput\n        id=\"standard-search-by-name\"\n        type=\"search\"\n        name=\"filterContact\"\n        value={filter}\n        onChange={e => onFilterChange(e.target.value)}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      />\n    </FormControl>\n  );\n};\n\n\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: inline-block;\n  position: fixed;\n  top: calc(50% - 50px);\n  left: calc(50% - 50px);\n  width: 100px;\n  height: 100px;\n  border: 5px solid rgba(255, 255, 255);\n  border-radius: 50%;\n  border-top-color: #3f51b5;\n  animation: spin 0.45s ease -in -out infinite;\n  z-index: 2;\n  -webkit-animation: spin 0.45s ease-in-out infinite;\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n","import { LoaderContainer } from './Loader.styled';\nimport { RotatingLines } from 'react-loader-spinner';\n\n\nexport function Loader() {\n  return (\n    <LoaderContainer>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </LoaderContainer>\n  );\n};\n\n\n","// import css from './Styles.module.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selector';\nimport { Box, FormControl } from '@mui/material';\nimport {\n  ColorButton,\n  StyledInput,\n  StyledInputLable,\n} from 'components/styled/styledMui';\n\nconst ContactsForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const storeContacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const alertContact = storeContacts.filter(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    alertContact.length\n      ? toast.error(`${name} is already in contacts`)\n      : dispatch(addContact({ name, number: number }));\n\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        width: '48ch',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        mb: '32px',\n        ml: 'auto',\n        mr: 'auto',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <FormControl\n        sx={{ width: '100%' }}\n        variant=\"standard\"\n        required\n        autoComplete=\"off\"\n      >\n        <StyledInputLable htmlFor=\"standard-phonebook-name\">\n          Name\n        </StyledInputLable>\n        <StyledInput\n          id=\"standard-phonebook-name\"\n          variant=\"standard\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormControl>\n      <FormControl\n        sx={{ width: '100%' }}\n        variant=\"standard\"\n        required\n        autoComplete=\"off\"\n      >\n        <StyledInputLable htmlFor=\"standard-phonebook-number\">\n          Number\n        </StyledInputLable>\n        <StyledInput\n          id=\"standard-phonebook-number\"\n          variant=\"standard\"\n          type=\"tel\"\n          name=\"phone\"\n          value={number}\n          onChange={e => setNumber(e.target.value)}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormControl>\n      <ColorButton sx={{ width: '18ch', ml: 'auto', mr: 'auto' }} type=\"submit\">\n        Add contact\n      </ColorButton>\n    </Box>\n  );\n};\n\nexport default ContactsForm;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport Contacts from 'components/Contacts/Contacts';\nimport SectionTitle from 'components/SectionTitle/SectionTitle';\nimport { selectIsLoading, selectError } from 'redux/contacts/selector';\nimport Filter from 'components/Filter/Filter';\nimport { fetchContact } from 'redux/contacts/operations'\nimport {Loader} from '../components/Loader/Loader';\nimport { Box } from '@mui/material';\nimport ContactsForm from 'components/ContactsForm/ContactsForm';\n\n\n const ContactsPage=()=> {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n        }}\n      >\n        <SectionTitle title=\"Phonebook\">\n          <ContactsForm />\n        </SectionTitle>\n        <SectionTitle title=\"Contacts\">\n          <Filter />\n          {isLoading && !error && <Loader />}\n          <Contacts />\n        </SectionTitle>\n      </Box>\n    </>\n  );\n}\n\nexport default ContactsPage;"],"names":["SectionTitle","title","children","variant","gutterBottom","color","sx","textAlign","PropType","PropTypes","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","queryFilter","contact","name","toLowerCase","includes","useSelector","dispatch","useDispatch","style","ml","mr","width","marginLeft","marginRight","map","id","number","display","justifyContent","fontFamily","fontSize","p","mb","type","onClick","deleteContact","onDelContact","marginBottom","padding","border","borderRadius","backgroundColor","FormControl","autoComplete","htmlFor","value","onChange","e","query","target","addFilter","pattern","LoaderContainer","styled","Loader","strokeColor","strokeWidth","animationDuration","visible","useState","setName","setNumber","storeContacts","reset","Box","component","flexDirection","onSubmit","preventDefault","length","toast","addContact","required","useEffect","fetchContact","Helmet"],"sourceRoot":""}