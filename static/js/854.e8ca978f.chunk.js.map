{"version":3,"file":"static/js/854.e8ca978f.chunk.js","mappings":"uLAIMA,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACnB,iCACE,SAAC,IAAD,CACEC,QAAQ,KACRC,cAAY,EACZC,MAAM,UACNC,GAAI,CAAEC,UAAW,UAJnB,SAMGN,IAEFC,IAVgB,EAcrBF,EAAaQ,SAAW,CACtBP,MAAOQ,IAAAA,QAGT,K,yMCmGA,EA7GqB,WACnB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAwCN,EAAAA,EAAAA,WAAS,GAAjD,eAAOO,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAQXC,EAAQ,WACZT,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAQD,OACE,UAACM,EAAA,EAAD,CACEC,UAAU,OACVjB,GAAI,CACFkB,MAAO,OACPC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,GAAI,OACJC,GAAI,OACJC,GAAI,QAENC,SA9BiB,SAAAC,GACnBA,EAAEC,iBAEFd,GAASe,EAAAA,EAAAA,IAAS,CAAEvB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACjCM,GACD,EA0BGc,aAAa,MAZf,WAcE,UAACC,EAAA,EAAD,CACE9B,GAAI,CAAEkB,MAAO,QACbrB,QAAQ,WACRkC,UAAQ,EACRF,aAAa,MAJf,WAME,SAAC,KAAD,CAAkBG,QAAQ,0BAA1B,mBAGA,SAAC,KAAD,CAEEC,GAAG,0BACHpC,QAAQ,WACRqC,KAAK,OACLC,MAAO9B,EACPA,KAAK,OACL+B,SAAU,SAAAV,GAAC,OAAIpB,EAAQoB,EAAEW,OAAOF,MAArB,QAGf,UAACL,EAAA,EAAD,CACE9B,GAAI,CAAEkB,MAAO,QACbrB,QAAQ,WACRkC,UAAQ,EACRF,aAAa,MAJf,WAME,SAAC,KAAD,CAAkBG,QAAQ,2BAA1B,oBAGA,SAAC,KAAD,CAEEC,GAAG,2BACHpC,QAAQ,WACRqC,KAAK,QACLC,MAAO5B,EACPF,KAAK,QACL+B,SAAU,SAAAV,GAAC,OAAIlB,EAASkB,EAAEW,OAAOF,MAAtB,QAGf,UAACL,EAAA,EAAD,CACE9B,GAAI,CAAEkB,MAAO,QACbrB,QAAQ,WACRkC,UAAQ,EACRF,aAAa,MAJf,WAME,SAAC,KAAD,CAAkBG,QAAQ,8BAA1B,uBAGA,SAAC,KAAD,CACEC,GAAG,8BACHC,KAAMvB,EAAe,OAAS,WAC9ByB,SAAU,SAAAV,GAAC,OAAIhB,EAAYgB,EAAEW,OAAOF,MAAzB,EACXG,cACE,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACE,SAACC,EAAA,EAAD,CACE,aAAW,6BACXC,QA5EkB,kBAAM9B,GAAgB,SAAA+B,GAAI,OAAKA,CAAL,GAA1B,EA6ElBC,YA3EkB,SAAAC,GAC9BA,EAAMlB,gBACP,EAsEW,SAKGhB,GAAe,SAACmC,EAAA,EAAD,KAAoB,SAACC,EAAA,EAAD,cAM9C,SAAC,KAAD,CAAab,KAAK,SAAlB,wBAGL,E,SCvGD,EAZmB,WACjB,OACE,4BACE,SAACc,EAAA,EAAD,WACE,+CAEF,SAACtD,EAAA,EAAD,CAAcC,MAAM,UAApB,UACE,SAAC,EAAD,QAIP,C","sources":["components/SectionTitle/SectionTitle.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.js"],"sourcesContent":["import React from 'react';\nimport { Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\n\nconst SectionTitle = ({ title, children }) => (\n  <>\n    <Typography\n      variant=\"h4\"\n      gutterBottom\n      color=\"#494D5F\"\n      sx={{ textAlign: 'center' }}\n    >\n      {title}\n    </Typography>\n    {children}\n  </>\n);\n\nSectionTitle.PropType = {\n  title: PropTypes.string,\n};\n\nexport default SectionTitle;\n","\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { Box, FormControl, IconButton, InputAdornment } from '@mui/material';\nimport {\n  ColorButton,\n  StyledInput,\n  StyledInputLable,\n} from 'components/styled/styledMui';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // console.log({ name, email, password })\n    dispatch(register({ name, email, password }));\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        width: '48ch',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        mb: '32px',\n        ml: 'auto',\n        mr: 'auto',\n      }}\n      onSubmit={handleSubmit}\n      autoComplete=\"off\"\n    >\n      <FormControl\n        sx={{ width: '100%' }}\n        variant=\"standard\"\n        required\n        autoComplete=\"off\"\n      >\n        <StyledInputLable htmlFor=\"standard-adornment-name\">\n          Name\n        </StyledInputLable>\n        <StyledInput\n          \n          id=\"standard-adornment-name\"\n          variant=\"standard\"\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={e => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl\n        sx={{ width: '100%' }}\n        variant=\"standard\"\n        required\n        autoComplete=\"off\"\n      >\n        <StyledInputLable htmlFor=\"standard-adornment-email\">\n          Email\n        </StyledInputLable>\n        <StyledInput\n         \n          id=\"standard-adornment-email\"\n          variant=\"standard\"\n          type=\"email\"\n          value={email}\n          name=\"email\"\n          onChange={e => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl\n        sx={{ width: '100%' }}\n        variant=\"standard\"\n        required\n        autoComplete=\"off\"\n      >\n        <StyledInputLable htmlFor=\"standard-adornment-password\">\n          Password\n        </StyledInputLable>\n        <StyledInput\n          id=\"standard-adornment-password\"\n          type={showPassword ? 'text' : 'password'}\n          onChange={e => setPassword(e.target.value)}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n              >\n                {showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <ColorButton type=\"submit\">Register</ColorButton>\n    </Box>\n  );\n};\n\nexport default RegisterForm;","import { Helmet } from 'react-helmet';\nimport  RegisterForm  from '../components/RegisterForm/RegisterForm';\nimport SectionTitle from 'components/SectionTitle/SectionTitle';\n\nconst RegisterPage=() =>{\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <SectionTitle title=\"Sing Up\">\n        <RegisterForm />\n      </SectionTitle>\n    </div>\n  );\n}\nexport default RegisterPage;"],"names":["SectionTitle","title","children","variant","gutterBottom","color","sx","textAlign","PropType","PropTypes","useState","name","setName","email","setEmail","password","setPassword","showPassword","setShowPassword","dispatch","useDispatch","reset","Box","component","width","display","flexDirection","justifyContent","mb","ml","mr","onSubmit","e","preventDefault","register","autoComplete","FormControl","required","htmlFor","id","type","value","onChange","target","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","event","VisibilityOff","Visibility","Helmet"],"sourceRoot":""}